// Code generated by vfsgen; DO NOT EDIT.

package otgen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// tmpls statically implements the virtual filesystem provided to vfsgen.
var tmpls = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 8, 1, 15, 54, 42, 969507651, time.UTC),
		},
		"/ot.go.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "ot.go.tmpl",
			modTime:          time.Date(2020, 7, 26, 23, 59, 9, 600730463, time.UTC),
			uncompressedSize: 5273,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5f\x6f\xdb\x38\x12\x7f\x96\x3e\xc5\xac\x1f\x16\xd2\x46\x91\xd3\x3e\xa6\xeb\x05\x72\x49\x6f\xcf\xb8\x5c\xb2\xa8\xb3\x57\x2c\x0c\xe3\x40\x49\x23\x9b\xa8\x44\xea\x48\x3a\x96\xa1\xf5\x77\x3f\x0c\x29\xc9\xb6\xec\xb8\x2d\x6e\x0d\xb4\x91\x34\x9c\xdf\x6f\x38\x7f\x38\xc3\xa6\xb9\x86\xf1\x4f\x3e\x00\xc0\xbd\xac\xb6\x8a\x2f\x57\x06\xde\xdf\xbc\xbf\x81\x5f\xa5\x5c\x16\x08\x8f\x8f\xf7\xbe\x15\x3f\xf2\x14\x85\xc6\x0c\xd6\x22\x43\x05\x66\x85\x70\x57\xb1\x74\x85\x9d\x24\x82\x7f\xa3\xd2\x5c\x0a\x78\x1f\xdf\x40\x40\x0b\x46\xad\x68\x14\x7e\xb0\x18\x5b\xb9\x86\x92\x6d\x41\x48\x03\x6b\x8d\x60\x56\x5c\x43\xce\x0b\x04\xac\x53\xac\x0c\x70\x01\xa9\x2c\xab\x82\x33\x91\x22\x6c\xb8\x59\x59\xa2\x16\x26\xb6\x20\x7f\xb4\x20\x32\x31\x8c\x0b\x60\x90\xca\x6a\x0b\x32\x3f\x5c\x09\xcc\x38\xab\xe9\xb7\x32\xa6\xd2\xb7\xe3\xf1\x66\xb3\x89\x99\x35\x39\x96\x6a\x39\x2e\xdc\x52\x3d\x7e\x9c\xde\x7f\x7c\x9a\x7d\xbc\x7e\x1f\xdf\x38\xa5\xdf\x45\x81\x5a\x83\xc2\xff\xae\xb9\xc2\x0c\x92\x2d\xb0\xaa\x2a\x78\xca\x92\x02\xa1\x60\x1b\x90\x0a\xd8\x52\x21\x66\x60\x24\x19\xbd\x51\xdc\x70\xb1\x8c\x40\xcb\xdc\x6c\x98\x42\x8b\x93\x71\x6d\x14\x4f\xd6\xe6\xc8\x6b\x9d\x89\x5c\x1f\x2d\x90\x02\x98\x80\xd1\xdd\x0c\xa6\xb3\x11\xfc\xed\x6e\x36\x9d\x45\x16\xe5\xf3\xf4\xe5\x1f\xcf\xbf\xbf\xc0\xe7\xbb\x4f\x9f\xee\x9e\x5e\xa6\x1f\x67\xf0\xfc\x09\xee\x9f\x9f\x1e\xa6\x2f\xd3\xe7\xa7\x19\x3c\xff\x1d\xee\x9e\xfe\x80\x7f\x4e\x9f\x1e\x22\x40\x6e\x56\xa8\x00\xeb\x4a\xd1\x1e\xa4\x02\x4e\xfe\xc4\xcc\x39\x6f\x86\x78\x64\x44\x2e\x9d\x51\xba\xc2\x94\xe7\x3c\x85\x82\x89\xe5\x9a\x2d\x11\x96\xf2\x15\x95\xe0\x62\x09\x15\xaa\x92\x6b\x8a\xac\x06\x26\x32\x8b\x53\xf0\x92\x1b\x66\xec\xb7\x93\xad\xc5\xfe\x4f\x63\xb8\xde\xed\x7c\x7f\x3c\x86\xa6\x89\x7f\x45\x81\x8a\x19\xcc\xee\x65\x86\x9f\x99\x45\x25\x69\xc5\xd2\x2f\x44\xd5\x34\xf1\x6f\xee\xf1\x89\x95\x48\x92\xa6\xe1\x39\xc4\xcf\xd5\xcc\x28\x2e\x96\xa8\x2c\x1a\x2f\x2b\xa9\x0c\x8c\xb4\x51\xa9\x14\xaf\x23\x9f\x92\x17\x45\x46\x0a\xf9\x5a\xa4\x10\xd4\x9a\xb0\x66\x14\xd9\x97\x6d\x85\xbb\x5d\x08\x77\x55\x85\x22\x0b\x58\x96\x41\x1c\xc7\x4d\x13\x7f\x2c\xb0\x44\x61\x3a\x79\xd3\xc4\x0f\x58\x18\xe6\xde\xa1\xf1\x3d\x85\x66\xad\x04\xd4\x3a\x9e\x0a\x8d\xca\x04\x05\x8a\xa0\xd6\x61\x04\x2c\xcb\xe2\x38\x0e\xfd\x4b\x7c\x9f\x90\xb2\x32\x50\xc0\x85\xb9\x80\x7e\x2c\x68\x76\x71\xa7\x77\x19\xbd\xb5\x88\x13\xba\xb5\xe7\xfb\x37\xd5\x12\xf1\xb0\xdb\xde\xb7\xec\xea\x01\x0b\x34\x18\xf0\x08\xc4\xba\xfc\xbe\xad\x35\xa3\x66\x44\x7f\xe2\xe7\xca\x7d\xe9\x0d\x88\xe0\xe0\x6b\xcb\x20\xd6\x65\xb8\xfb\x06\x53\xda\x0d\xeb\x20\xc3\xe2\x5b\x7d\xc0\x35\xdc\x4e\xa0\x64\x5f\x30\x28\x59\x35\xe7\xc2\x2c\x12\x29\x8b\xd0\xf7\xa8\x0a\xfe\x13\x81\x22\xb9\x62\x62\x89\x40\xb0\x8d\xef\x59\x09\x8f\xa0\xde\x4b\xc8\x24\xdf\xf3\x3c\x9e\x43\x0d\x93\x09\x28\xf7\xea\x71\x3d\xe7\x0b\x98\x80\x51\x6b\xa4\x0f\x3b\xdf\xfe\xdb\xf9\xde\x2b\x53\x84\x67\xd8\xc0\x26\xdf\xcb\x95\x2c\x09\xf9\xc6\xf7\x32\xda\x16\x55\xdb\xed\x04\x72\x56\x68\x74\x56\xf1\x13\x62\x9e\x43\xbf\xb6\x33\xe4\x07\x47\xee\x0c\x71\x54\x13\x47\x19\x77\x91\x83\x6b\x20\xb6\xb0\x5b\xe2\x00\x7a\x2e\xcf\x73\xc6\x4c\x80\xf7\xc6\x03\x16\x1a\x7b\x8e\xb7\x29\xba\x80\xbe\x45\xd1\x79\xe4\x94\xc1\xba\x67\xb8\xa1\xb3\xf6\xb7\x35\xb8\xa7\xd8\xf5\xf9\x66\xd7\xf9\xee\xb0\xf9\x4d\x61\xce\xeb\x7f\x31\x93\xae\xc0\x89\xb5\x3d\x98\xc4\xba\x4c\x50\x51\x93\xc0\x36\x71\x80\x19\x2b\x49\x70\xc9\x85\x3d\xe6\x64\x4e\x2e\x36\x2b\x66\xa0\xb4\x00\x66\x85\x84\x79\x51\x63\xab\xe3\xb7\x53\xf5\xc0\x9a\x60\xab\x61\xbe\x38\xcd\x52\x2e\x8c\x4d\xcd\x36\x0b\x28\xe4\x1f\x80\xc3\xcf\xd0\x6d\xf8\xc7\x1f\xfb\xd7\xad\x0e\x3f\x00\xbf\xba\xea\xd2\xa0\xb6\x11\xf9\x61\x02\xdb\x7d\x68\x12\x85\xec\x4b\xef\xda\xd6\x43\x9c\xbc\x63\xb6\x15\x0e\x8b\xc2\x5a\xd4\x55\x60\x5f\x73\x83\x55\x5f\x3f\xd3\x78\x0e\x8a\x4a\xe1\xc6\xda\xd0\x1d\x35\x87\x16\x30\x77\x0a\xd7\x47\x25\xdf\x1f\x79\x74\xf6\xbc\xc5\xbd\x3f\xa4\xbe\xf3\xa8\x3b\x4b\xb9\x47\xbb\x48\xda\x26\x5d\xf6\x95\x93\xee\x2c\x45\xa7\x6b\x09\x7a\xaf\x77\x52\x42\x44\x95\xb3\xd4\x16\xd6\x78\x0c\x8f\xc8\x5e\x51\xf7\xc9\xba\x92\x1b\x28\x99\xd8\xee\xb3\x4e\xe6\xc0\x40\x53\x5a\xd1\x63\x81\x62\x69\x56\x20\x60\x23\xd7\x45\x06\x0a\x4b\xc6\x85\x05\x32\x12\x12\x04\xa3\x98\xd0\xb9\x54\x65\x3b\xb6\x64\x19\xa7\x26\xcd\x0a\x90\x95\x06\x96\x1b\x54\x76\x96\xd9\x52\xfe\xda\xf1\x4b\x56\x31\x05\x98\xd8\x2d\x0e\x03\x81\x4b\x66\xf8\x6b\x5f\x35\x3c\xa7\xb6\x0f\x52\x14\x5b\x7a\x6e\xb5\x20\x65\x82\xe6\xb8\x04\x21\x95\x2b\x54\x28\x4c\xb1\x75\x08\x95\x1d\x38\xc8\xa2\x33\x96\xc7\xbe\xe7\xf6\x1c\x08\xe7\x5e\x2e\x8c\xef\xdd\x91\x4d\xc1\xb0\x80\x02\x2e\xd2\x62\x9d\xe1\xa0\xb2\xa2\x76\xdf\x34\x76\x0c\x54\xec\x4c\x70\x3c\x3b\xd0\x41\xeb\x9e\x83\x10\xb4\x7d\xe8\x26\x07\xd8\xed\xce\x05\xc9\x65\xc9\x99\x7a\x3d\x59\xe9\x52\xd8\x6e\x61\x28\x72\x79\x60\x45\x87\x79\x76\xcc\x11\xb6\xf1\x0f\xf8\xde\x19\xd0\x40\x57\xb7\x02\x76\x97\x74\x9d\xd3\xce\x1c\x3c\xc1\xd0\x5f\xc3\x05\x47\xdd\xfa\x40\x12\xd4\x61\x04\xb5\xf6\xdf\x1a\xc1\x2e\x18\x33\x70\xf1\x01\xc5\x88\x3b\x7f\x8e\xe0\xea\x94\x2e\xee\xf4\xfc\xb3\xe8\xce\xc1\x17\xd1\x95\x8b\x01\xa1\xb7\x93\x61\x3c\x35\x92\x05\x5c\x98\xa0\x1e\x96\xf9\x71\x74\x2e\xe2\x66\x2e\x80\x17\x70\x4f\xe7\xcf\x73\xa6\x7f\x25\xc2\xd7\xe0\x00\xcf\x87\xba\x03\xf9\x2b\x42\x5d\xeb\xf9\x6d\xbd\xa0\xf8\xce\xeb\xdb\x85\x7f\xde\xea\xce\x31\xff\x97\xd5\x1d\xc8\x5f\x61\xb5\xe0\xc5\x19\x93\x4f\x21\xef\x99\x70\x74\x74\xd0\x1d\x35\xb6\x10\x68\xcc\x23\xc8\x42\x50\x9f\x6d\x5b\x6b\x3f\xf6\xc9\x6a\x3f\x64\x91\x72\xdb\x5e\x0b\x01\x13\x3a\x1d\x5b\x4f\x14\x22\xfc\x40\xdf\x7e\x6e\xdb\x5c\x67\x5f\x37\x40\x1d\x75\x5c\x3b\xf2\x7c\xe5\x5a\x72\xde\xd4\xe3\x85\xc4\x44\xe3\xe3\x0a\x59\x16\x41\xc9\xb3\x08\x0c\xe3\xc5\x60\x95\xef\xd9\x8f\x13\xaa\xdc\x4b\x9b\xda\xeb\xdb\x8d\x39\x1b\xe8\x9d\x46\x36\xa2\x80\x49\xd7\xd3\x7a\x42\x7b\x35\x38\xed\xe4\x4e\x4e\xba\xdd\xdd\xc1\x5d\xf5\x0e\xac\x7a\xe0\x79\x0e\x95\x92\xd9\x3a\x45\x4d\x9d\x00\x0d\xf5\x01\x59\xd1\x5d\xd0\x5e\x1c\xed\xac\x95\x32\x41\x3d\xe4\xa0\x69\xd0\x14\x26\x09\xaf\x55\xee\xbb\x88\x5d\xef\x1a\x9f\x9b\xd0\xdc\xe7\xa4\x1d\xc1\x4e\xe9\x03\x16\x41\x72\x76\xee\x3a\xed\xe9\xe4\xe6\xc0\xf7\x3c\x72\xd6\xe0\x37\x1c\xdb\x3d\x66\x3d\x99\xd8\xff\x4b\x9e\x15\x48\xa9\xc2\x33\xcb\xfe\x78\x3f\x1b\x64\x77\xc0\xc2\x61\x82\x07\x49\x18\xfa\x5e\x68\x47\xa7\x0e\xa0\x9b\x9f\xb8\xed\x95\x01\x0b\xe1\x97\x2e\xd5\xc8\xa6\x3e\x34\xb2\xd2\xe7\x06\x0e\xa7\x43\xb0\x76\xb6\x6e\x51\x92\x6f\x45\x69\x27\xa3\xa4\x03\x38\x98\xfe\xcf\xea\x9d\x78\x7a\x7e\x4b\x5e\x59\x44\x90\xcc\x6f\xc9\x33\x8b\xd0\xa5\xce\x65\xda\x76\x06\x74\x3e\x08\xdf\x5c\x7e\xca\x46\x64\x57\x4e\xed\xd6\x92\x26\x87\x1f\xc2\x61\xda\xca\x4a\xf7\xf5\x78\x10\x28\x9b\x1f\x27\x87\x13\xe3\x11\x24\x3c\xa2\x6a\x77\x03\xa0\xef\x15\xfb\xbb\xe3\x7c\x61\x2f\xdf\xce\xdf\x3f\x39\x27\x87\xbe\x57\xb2\xba\x1d\xe2\xd9\x4d\x04\xc9\x8d\x7d\x89\xba\xa1\x9e\x20\x19\xdb\x97\x24\xeb\x6f\x97\x44\x94\x24\x7b\x49\xd2\xdf\xb8\x18\xa3\xa4\x48\xda\x0f\x5e\x61\x2f\x09\x8c\xb7\x94\x70\x05\x09\x77\x37\xcf\x1c\x18\x77\xf9\xf3\xe7\x9f\x90\xf0\x7d\x2a\x91\x96\x9e\x17\xf6\x5e\xfa\xce\xbe\x1f\x5e\xea\x0e\x84\x85\x9e\x07\x8c\x5f\xbf\xeb\xf6\x73\x95\xf0\xeb\x77\x0b\xb8\xea\xb4\x3a\x9e\x56\xe1\x17\xa0\xdd\xb6\x20\xf4\x38\x69\x25\xee\x4b\xeb\x00\x32\xf6\xea\xdd\x75\xc9\x6a\x72\xa7\x7b\xda\xc3\xed\x86\x67\xa6\xd3\x8a\x08\xda\xdf\xf9\xff\x0b\x00\x00\xff\xff\x50\x39\x4e\xb4\x99\x14\x00\x00"),
		},
		"/ot_test.go.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "ot_test.go.tmpl",
			modTime:          time.Date(2020, 7, 27, 0, 1, 28, 250475285, time.UTC),
			uncompressedSize: 8458,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xff\x6f\xdb\x36\x16\xff\x59\xfa\x2b\x5e\x35\xac\xb0\x7a\xaa\xec\x38\xfb\xc9\x45\x7f\x70\xec\xdc\xce\xb8\xc4\x1e\xe2\xec\x8a\x61\x18\x02\x5a\xa2\x6c\xe2\x64\x52\x93\xa8\xa6\x81\xa7\xff\xfd\xf0\x48\xca\x96\x6c\x29\x91\xdb\xdb\xb5\x03\x6e\x28\x10\x99\xef\x0b\x3f\x7c\xdf\xf8\xf8\xb6\xdb\xbd\x85\xfe\x1b\x1b\x00\x60\x22\x92\xa7\x94\xad\x37\x12\x86\x83\xe1\x00\x7e\x14\x62\x1d\x53\xb8\xb9\x99\xd8\x8a\x7c\xc3\x02\xca\x33\x1a\x42\xce\x43\x9a\x82\xdc\x50\x18\x27\x24\xd8\xd0\x92\xe2\xc1\xbf\x68\x9a\x31\xc1\x61\xe8\x0f\xa0\x87\x0c\x8e\x21\x39\xee\x3b\xa5\xe3\x49\xe4\xb0\x25\x4f\xc0\x85\x84\x3c\xa3\x20\x37\x2c\x83\x88\xc5\x14\xe8\xa7\x80\x26\x12\x18\x87\x40\x6c\x93\x98\x11\x1e\x50\x78\x64\x72\xa3\x36\x32\x6a\x7c\xa5\xe4\x17\xa3\x44\xac\x24\x61\x1c\x08\x04\x22\x79\x02\x11\x55\x39\x81\x48\x8d\x1a\xff\xdb\x48\x99\x64\xa3\x7e\xff\xf1\xf1\xd1\x27\x0a\xb2\x2f\xd2\x75\x3f\xd6\xac\x59\xff\x66\x36\xb9\x9e\x2f\xaf\xdf\x0e\xfd\x81\x16\xfa\x99\xc7\x34\xcb\x20\xa5\xbf\xe7\x2c\xa5\x21\xac\x9e\x80\x24\x49\xcc\x02\xb2\x8a\x29\xc4\xe4\x11\x44\x0a\x64\x9d\x52\x1a\x82\x14\x08\xfa\x31\x65\x92\xf1\xb5\x07\x99\x88\xe4\x23\x49\xa9\xd2\x13\xb2\x4c\xa6\x6c\x95\xcb\x9a\xd5\x4a\x88\x2c\xab\x31\x08\x0e\x84\x83\x33\x5e\xc2\x6c\xe9\xc0\xd5\x78\x39\x5b\x7a\x4a\xcb\x87\xd9\xfd\x3f\x16\x3f\xdf\xc3\x87\xf1\xdd\xdd\x78\x7e\x3f\xbb\x5e\xc2\xe2\x0e\x26\x8b\xf9\x74\x76\x3f\x5b\xcc\x97\xb0\xf8\x3b\x8c\xe7\xbf\xc0\x3f\x67\xf3\xa9\x07\x94\xc9\x0d\x4d\x81\x7e\x4a\x52\x3c\x83\x48\x81\xa1\x3d\x69\xa8\x8d\xb7\xa4\xb4\x06\x22\x12\x1a\x54\x96\xd0\x80\x45\x2c\x80\x98\xf0\x75\x4e\xd6\x14\xd6\xe2\x23\x4d\x39\xe3\x6b\x48\x68\xba\x65\x19\x7a\x36\x03\xc2\x43\xa5\x27\x66\x5b\x26\x89\x54\x6b\x27\x47\xf3\xed\x37\x7d\x78\x5b\x14\xb6\xdd\xef\xc3\x6e\xe7\xff\x48\x39\x4d\x89\xa4\xe1\x44\x84\xf4\x03\x51\x5a\x0d\x75\xbe\xb8\xbf\x1e\xa1\x2c\x46\x03\xcd\xe4\xde\xea\x4a\x5f\x24\xe2\x58\x3c\x22\x86\x90\x46\x8c\x33\xbd\x9f\x72\x3a\xa7\x24\x5d\x3d\xc1\x03\x0a\xf9\x6b\x81\xba\x30\x90\x46\x76\xbf\x8f\xdf\x81\xe0\x99\x84\x1e\x7e\x02\xdc\xd3\x4c\xee\x76\xfe\x75\x4c\xb7\x94\xcb\x39\xd9\xd2\xa2\x18\xb4\x93\x2e\xda\x49\xc3\x76\xd2\x25\x92\x5c\xdb\x4e\x48\xf0\x6f\xb4\xdf\x6e\xe7\xff\xa4\x3f\x35\xdd\xb6\xd9\x36\x11\x29\x82\xb2\x9c\x94\x46\x31\x0d\xa4\x63\x5b\x0e\x1e\x80\xf1\xb5\x63\xbb\xb6\x1d\xe5\x3c\x28\x95\x2f\x92\xfb\xa7\x84\x16\xc5\xc3\x52\xa6\x8c\xaf\x7b\x12\xde\x18\x56\xff\xde\x85\x9d\x6d\x65\x18\xc0\x30\x7a\x8f\x3b\x2d\xf1\x5b\xf3\xef\x1a\x4f\xeb\x35\x9f\xb4\xb0\x2d\x8c\x80\x07\x4f\x19\x1f\x95\xa5\x84\xaf\x29\xfc\xfa\x5b\x26\xd3\x3c\x90\xb8\x8f\xb5\x80\x0a\x1c\xdb\xb2\x96\x90\x29\x48\xb6\x55\x20\x79\xb7\x73\x76\x4e\x51\x54\x78\xa6\x34\xa6\x92\xf6\x2e\x5d\x0f\x9c\x50\x7d\xc3\xa5\x53\x78\x8d\xbc\x77\x14\xb3\x58\xf3\xa6\xea\xbb\x9d\x77\xc6\x33\x9a\xca\x9e\x3a\x38\xf2\x33\xf5\x1b\x1c\xf8\x1b\xa8\x35\xdf\x98\xca\x45\xf9\x42\x61\x67\x11\x90\x40\xe6\x24\xc6\xb3\xa9\x58\x59\xec\xb9\xde\x95\xa4\x57\x86\xb4\x54\x22\x96\xf4\xaf\xd3\x54\xa4\x51\xcf\x59\x0b\x09\xdf\x7f\xf7\xd1\xc3\x74\xa2\x01\x66\xe9\xf7\xdf\x7d\x74\x3c\x23\xe7\x19\x29\xd7\xb6\xac\xc2\xb6\x0a\xbb\xa8\x7b\xb0\xe2\x94\x87\x9f\x52\x1a\xb1\x4f\xb7\x44\x06\x9b\x53\x4f\xbe\xec\x82\x39\xe6\x5c\x69\x75\x6b\xec\xc1\xd5\x91\xd7\x6d\xcb\xba\x45\x1e\xc6\x65\xe9\x96\xf9\x08\x1c\xba\x4d\xe4\x93\x31\x27\x1e\x0d\xd7\xb2\x0d\x46\xe1\xd8\xc1\x45\x6b\x3c\xea\x14\x3e\x4a\x83\x75\xd5\x8d\xb9\x2d\xd6\x94\x8e\xdb\x11\x5c\xe0\x47\x1d\x53\x2c\xf8\xfa\x4c\x48\xcf\xee\xd2\x11\xe9\x73\x90\xe8\xef\x18\x1a\x31\xe5\x6b\xb9\x81\x84\xa4\x92\x91\x18\xb6\xe8\xc0\xff\x39\xcc\x66\x1d\xc3\xce\xe8\xa3\x3c\xfe\xb6\xa0\x1f\x62\x61\x58\x42\xd7\xe9\x2a\xfd\xbb\x9c\xf7\x54\x5a\xcd\x3d\xc0\x64\x3a\xcd\x16\xcb\x3a\xca\xe8\xb1\x5f\xcb\x2e\x5c\xba\xc2\x9c\xac\x24\x7f\x99\xe1\xb7\x5a\x41\x99\xe2\x2a\xc3\x2b\xf9\xec\x94\x79\xee\x98\xdc\xbe\x55\x7a\x30\xbb\x0a\x17\x33\xdc\x0a\x69\x2c\x49\xd7\xa2\x5b\xf8\x98\xac\x49\x42\x79\xd8\x6b\x34\x43\x8b\x63\x5d\xbb\x72\xc4\x0e\x1b\x5d\x16\xfe\x38\x49\xe2\xa7\x9e\x42\xe7\xda\x96\x3e\x46\x83\xb4\x6d\x59\x8d\x0a\xbc\x16\xc2\x45\x1b\x01\xfd\x56\xd8\x68\xe1\x98\xf2\x9e\x46\xeb\xa2\x99\xf1\xa7\xde\xde\x85\x3f\xfe\x30\x96\xad\x39\xa8\xa4\x1a\xe6\x52\x56\xbb\xff\x45\xb7\x18\xe9\x17\xca\xed\x84\x70\x6d\x91\xcf\xa8\xb5\x4b\x80\xd3\xe2\x3a\x05\x80\x5f\x7f\xab\xdf\x83\x13\xc2\x61\x25\x44\x5c\x16\xdc\x09\xe1\x23\x88\x48\x8c\xad\xf0\x74\x54\x67\x6f\xbd\x24\x2f\xdc\x42\x67\xee\x79\xd2\xe6\xda\xac\x4b\xcb\x34\xef\x24\xac\xef\xd1\x96\x98\x2d\x6a\x97\x67\x40\xf8\x3e\xcf\x96\xfe\xc1\xac\xf8\x7b\xea\xbe\x53\xf4\x32\xb9\xd0\x1e\xd5\x0b\xb4\x74\x63\x40\x78\x43\x6a\x4d\xd4\x6a\x24\xd2\x72\x61\x69\xfe\x4e\xbb\xdc\xa7\x26\xab\x4e\xdc\xfb\xff\xfc\xfc\x4b\xe4\xa7\x0e\x7e\x83\x38\x3b\x75\xe3\x8a\x64\x5f\xda\xda\x36\x2f\x0f\xaa\x35\x1c\x77\xf1\x8f\xa0\x34\x0a\xb9\xca\x92\xaf\x14\xff\x3e\x07\xb4\x33\xeb\x76\x51\x6b\x8e\x07\xea\xaf\x07\x4e\x40\x38\xbe\x75\x57\x54\x3f\x20\xf5\x7b\x51\xbd\xb7\x54\xf3\x9e\x67\x7a\x25\x48\x29\x91\x14\x98\xd4\xf7\x33\xee\xa3\xaf\x9b\x43\x98\xa9\xbd\x3b\x46\x51\x5b\xab\xff\xad\x46\x43\x14\xe7\x94\xcb\x29\x1e\xeb\x4f\x09\x85\x13\x9f\x63\x41\xd7\xe5\x77\xe0\xc1\x85\x8b\xbf\xcd\xdb\xa2\x39\xdf\x91\x61\x5f\x71\x5f\xe0\xfe\xab\x05\xcb\x33\x05\xe4\xbc\x92\x33\xf8\xb6\x4b\xce\x67\xf7\x03\x33\x6e\xe6\x48\x27\x4d\xc1\x22\xc9\x34\xe5\xb8\x33\x58\xe4\xb2\x45\xa4\x0c\x88\x5a\xe3\x80\x6e\x9c\xf1\x51\xe3\x36\xcf\x3d\x5c\x16\x49\x36\x6a\x00\xf0\x5c\xb7\xa0\xe4\x4a\x10\xa6\x63\x50\xaa\x72\x39\x3a\x73\xfb\x43\x9f\x40\xd4\x89\xca\x36\x61\xc6\x8f\xfa\x84\x45\x92\xb9\xe6\x29\xae\x18\x2b\xfd\x82\xb6\xc5\x49\xd3\xa0\x19\xdf\xa3\xbf\xf1\xa3\xe2\xee\x03\xa5\xa6\xc2\xb4\x0c\x2a\xf1\xc8\x41\x67\x20\xb8\x64\x3c\xa7\x86\x2a\x72\x59\x45\xd9\x08\xf1\x95\x19\xcd\xf8\x53\x4a\x93\x6b\x7c\x45\xf5\x44\x2e\xcd\x76\x8b\x5c\xba\x8d\x2d\x8e\x62\x39\x69\x71\x90\xbd\x43\x2f\x33\x65\x51\xf4\x40\x78\xf8\xd9\x11\x3a\xd7\x9e\xab\xcf\x07\x1a\x82\xef\x86\x72\x0c\xd9\xca\x8c\xc0\x8c\x50\x1c\xef\xd8\xed\xc5\xc9\x4a\x4b\x20\x80\x7e\xcb\xed\xcc\xa0\xe7\x54\x53\x9b\xdc\xe9\x86\xa5\x26\x3d\x06\xfa\x6c\x4d\x2f\x01\xd5\x47\x56\x65\xf7\x4b\x00\xb7\xbc\x6b\x61\x58\xb3\x87\x07\x67\x9d\xe6\xac\x5e\x66\xd8\x11\x54\xbb\xf4\xb0\x66\xf1\x33\x4d\xf2\x67\x60\x6d\x9f\x17\xb4\x60\xf5\xa0\x74\xe7\x57\xb7\x73\x8b\xd2\xcb\x76\xa5\x3f\x9c\x3b\xf8\x08\x59\x14\x9d\x5e\xe1\x58\x3f\xb4\xe8\xd8\x14\x9e\xfd\xf8\x03\x6f\x53\x14\x72\xf7\x45\xd7\xd4\x80\xc6\x31\x08\x72\x7a\xe0\xa8\xff\xed\x12\x53\xb4\xe5\x5e\xbe\x5a\x82\x35\xa9\xa2\x6d\x3f\x24\x51\x05\xd4\xcc\x64\x0e\xad\x8f\xda\xff\x68\x43\xd3\xeb\xe8\x5a\x8d\x1c\x8e\x56\x02\x34\xce\xa8\x61\x3e\x19\xf3\x54\xf4\x29\x06\xdc\xad\x57\x6d\x18\xde\xbf\x87\x01\xbc\x7e\xad\x60\x1b\x43\xa8\x35\x17\x5e\xbf\x56\x12\x56\x43\x79\xaf\x0d\x73\xaf\x4a\xa4\x9d\x47\x44\xda\xd6\xfa\xf8\x87\x41\x51\xb5\xdc\x3f\xb0\x50\x79\xeb\x66\xb2\xfc\x82\xea\xde\x54\xe1\x1b\x5b\x8c\xf1\xcc\x83\xab\x99\x07\x37\xf3\x5a\xa5\x5f\x09\xb9\x01\x3d\x0f\xee\x50\xed\x0b\x0f\x06\xfa\x9f\x49\x3b\xd2\x26\xdb\xbd\xbe\xd7\x15\xae\xba\x83\x69\xdb\xa2\xae\x50\x0a\x49\x62\xd8\xb2\xcc\x4c\x3a\xbf\xb0\xde\x74\x90\x1e\x36\x4b\xff\x70\x02\x4d\x21\x02\x22\x21\x93\xa4\xe9\xb6\xfd\xef\x43\x6b\x9f\x19\x1b\x68\x17\xc7\xd0\x28\x0f\xbf\xa2\xcd\x50\xfa\x42\xff\xab\x03\x8b\xe3\xaf\x68\xae\x8b\xbd\xb9\x86\x35\x54\xdb\x3c\x96\x0c\xb6\x2c\x0c\xe3\x8e\xb7\x65\xcb\xb1\xcf\xbb\x88\x2e\xbb\x1d\xa6\xe5\xc6\x39\xff\xd2\xd3\x0e\x19\x9e\x3d\x9e\x67\x1e\xac\x98\x07\xb1\x1a\x1d\x56\x8b\x5f\xe3\x1d\x45\xd8\xfe\x72\x1a\xcf\xf0\x81\xb8\x3a\x2c\x5c\xa9\x85\xf8\x30\x63\xbc\x99\xb7\x4c\xf0\xf7\x7b\x36\x94\x68\xac\x88\x46\x5d\x79\x6f\xcd\xdd\xe3\x7a\xfd\x9f\x00\x00\x00\xff\xff\xe2\x27\x03\xab\x0a\x21\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/ot.go.tmpl"].(os.FileInfo),
		fs["/ot_test.go.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
